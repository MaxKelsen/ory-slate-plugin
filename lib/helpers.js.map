{"version":3,"sources":["../src/helpers.js"],"names":["IconButton","React","makeTagNode","NodeComponent","attributes","children","node","align","data","get","textAlign","displayName","Tag","makeTagMark","MarkComponent","ToolbarButton","icon","isActive","onClick","color"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,IAAMC,cAAc,SAAdA,WAAc,MAAO;AAC9B,QAAMC,gBAAgB,SAAhBA,aAAgB,OAQhB;AAAA,YAPFC,UAOE,QAPFA,UAOE;AAAA,YANFC,QAME,QANFA,QAME;AAAA,YALFC,IAKE,QALFA,IAKE;;AACF,YAAMC,QAAQD,KAAKE,IAAL,CAAUC,GAAV,CAAc,OAAd,CAAd;AACA,eACI;AAAC,eAAD;AAAA,8BAASL,UAAT,IAAqB,OAAO,EAAEM,WAAWH,KAAb,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCF;AADD,SADJ;AAKH,KAfD;;AAiBAF,kBAAcQ,WAAd,GAA+BC,GAA/B;AACA,WAAOT,aAAP;AACH,CApBM;;AAsBP,OAAO,IAAMU,cAAc,SAAdA,WAAc,MAAO;AAC9B,QAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,YAAGT,QAAH,SAAGA,QAAH;AAAA,eAClB;AAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAMA;AAAN,SADkB;AAAA,KAAtB;;AAIAS,kBAAcH,WAAd,GAA+BC,GAA/B;;AAEA,WAAOE,aAAP;AACH,CARM;;AAUP,OAAO,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,QACzBC,IADyB,SACzBA,IADyB;AAAA,QAEzBC,QAFyB,SAEzBA,QAFyB;AAAA,QAGzBC,OAHyB,SAGzBA,OAHyB;AAAA,WASzB;AAAC,kBAAD;AAAA;AACI,wBAAYA,OADhB;AAEI,mBAAOD,WAAW,EAAEE,OAAO,kBAAT,EAAX,GAA2C,EAAEA,OAAO,SAAT,EAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIKH;AAJL,KATyB;AAAA,CAAtB","file":"helpers.js","sourcesContent":["import IconButton from 'material-ui/IconButton'\nimport React from 'react'\n\nexport const makeTagNode = Tag => {\n    const NodeComponent = ({\n        attributes,\n        children,\n        node\n    }: {\n        attributes: Object,\n        children: any,\n        node: any\n    }) => {\n        const align = node.data.get('align')\n        return (\n            <Tag {...attributes} style={{ textAlign: align }}>\n            {children}\n            </Tag>\n        )\n    }\n\n    NodeComponent.displayName = `${Tag}-node`\n    return NodeComponent\n}\n\nexport const makeTagMark = Tag => {\n    const MarkComponent = ({ children }: { children: any }) => (\n        <Tag>{children}</Tag>\n    )\n\n    MarkComponent.displayName = `${Tag}-mark`\n\n    return MarkComponent\n}\n\nexport const ToolbarButton = ({\n    icon,\n    isActive,\n    onClick\n}: {\n    icon: string,\n    isActive: string,\n    onClick(): void\n}) => (\n    <IconButton\n        onTouchTap={onClick}\n        style={isActive ? { color: 'rgb(0, 188, 212)' } : { color: '#3C3C3C' }}\n    >\n        {icon}\n    </IconButton>\n)\n"]}