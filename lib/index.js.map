{"version":3,"sources":["../src/index.js"],"names":["hooks","createNodes","mergeAll","createMarks","createPlugins","flatten","createInitialState","html","Html","rules","defaultPlugins","lineBreakSerializer","parseHtml","parse5","parseFragment","plugins","props","schema","nodes","marks","onKeyDown","e","data","state","isMod","key","isShift","transform","insertText","apply","doc","document","getBlocks","last","getLastText","text","length","preventDefault","deleteBackward","i","newState","HoverButtons","editorState","onChange","focus","map","plugin","hoverButtons","Button","j","minWidth","ToolbarButtons","toolbarButtons","Slate","cellProps","StaticComponent","__html","serialize","Component","name","version","IconComponent","description","allowInlineNeighbours","handleFocus","source","isFocused","setTimeout","handleBlur","blur","reducer","action","type","ActionTypes","UNDO","REDO","content","merge","isNative","handleRemoveHotKey","handleFocusPreviousHotKey","handleFocusNextHotKey","unserialize"],"mappings":"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","file":"index.js","sourcesContent":["// @flow\n// TODO lint: prefer-reflect doesn't work with slate state #158\n/* eslint no-duplicate-imports: [\"off\"] */\n/* eslint prefer-reflect: [\"off\"] */\nimport Subject from 'material-ui-icons/Subject'\nimport { compose, flatten, map, mergeAll, prop, pathOr } from 'ramda'\nimport { Html } from 'slate'\nimport React from 'react'\nimport { ActionTypes } from 'redux-undo'\nimport Component from './Component'\nimport type { Props } from './Component'\nimport Plugin from './plugins/Plugin'\n// import KatexPlugin from './plugins/katex'\nimport * as hooks from './hooks'\nimport parse5 from 'parse5'\n\nconst createNodes = compose(mergeAll, map(prop('nodes')))\nconst createMarks = compose(mergeAll, map(prop('marks')))\nconst createPlugins = compose(flatten, map(prop('plugins')))\n\nexport const createInitialState = hooks.createInitialState\n\nexport const html = new Html({\n  rules: [...hooks.defaultPlugins, hooks.lineBreakSerializer],\n  parseHtml: parse5.parseFragment\n})\n\nexport default (plugins: Plugin[] = hooks.defaultPlugins) => {\n  const props = {}\n  props.schema = {\n    nodes: createNodes(plugins),\n    marks: createMarks(plugins)\n  }\n  props.plugins = createPlugins(plugins)\n  props.onKeyDown = (\n    e: Event,\n    data: { key: string, isMod: boolean, isShift: boolean },\n    state: any\n  ) => {\n    // we need to prevent slate from handling undo and redo\n    if (data.isMod && (data.key === 'z' || data.key === 'y')) {\n      return state\n    }\n\n    if ( data.isShift && data.key === 'enter') {\n      return state\n        .transform()\n        .insertText('\\n')\n        .apply()\n    }\n\n    if (data.key === '-') {\n      const doc = state.document.getBlocks().last().getLastText().text\n      if(doc.length > 0) {\n        if(doc[doc.length - 1] === '-') {\n          // prevent the actual hyphen getting in\n          e.preventDefault();\n          return state.transform().deleteBackward().insertText('\\u2014').apply();\n        }\n      }\n    }\n\n    for (let i = 0; i < plugins.length; i++) {\n      const { onKeyDown } = plugins[i]\n      const newState = onKeyDown && onKeyDown(e, data, state)\n      if (newState) {\n        return newState\n      }\n    }\n\n    return\n  }\n\n  const HoverButtons = ({ editorState, onChange, focus }: Props) => (\n    <div>\n      {plugins.map((plugin: Plugin, i: number) =>\n        plugin.hoverButtons.map((Button: any, j: number) => (\n          <Button\n            key={`${i}-${j}`}\n            editorState={editorState}\n            onChange={onChange}\n            focus={focus}\n            style={{\n              minWidth: '44px',\n            }}\n          />\n        ))\n      )}\n    </div>\n  )\n  props.HoverButtons = HoverButtons\n\n  const ToolbarButtons = ({ editorState, onChange, focus }: Props) => (\n    <div>\n      {plugins.map((plugin: Plugin, i: number) =>\n        plugin.toolbarButtons.map((Button: any, j: number) => (\n          <Button\n            key={`${i}-${j}`}\n            editorState={editorState}\n            onChange={onChange}\n            focus={focus}\n          />\n        ))\n      )}\n    </div>\n  )\n  props.ToolbarButtons = ToolbarButtons\n\n  const Slate = (cellProps: Props) => <Component {...cellProps} {...props} />\n  const StaticComponent = ({ state: { editorState } = {} }: Props) => (\n    <div dangerouslySetInnerHTML={{ __html: html.serialize(editorState) }} />\n  )\n  return {\n    Component: Slate,\n    StaticComponent,\n\n    name: 'ory/editor/core/content/slate',\n    version: '0.0.1',\n    IconComponent: <Subject />,\n    text: 'Text',\n    description: 'An advanced rich text area.',\n\n    allowInlineNeighbours: true,\n\n    handleFocus: (props: Props, source: string) => {\n      if (source === 'onMouseDown') {\n        return\n      } else if (props.state.editorState.isFocused) {\n        return\n      }\n\n      setTimeout(() => {\n        props.onChange({\n          editorState: props.state.editorState\n            .transform()\n            .focus()\n            .apply()\n        })\n      }, 0)\n    },\n\n    handleBlur: (props: Props) => {\n      if (!props.state.editorState.isFocused) {\n        return\n      }\n\n      props.onChange({\n        editorState: props.state.editorState\n          .transform()\n          .blur()\n          .apply()\n      })\n    },\n\n    reducer: (state: any, action: any) => {\n      if (\n        (action.type === ActionTypes.UNDO ||\n          action.type === ActionTypes.REDO) &&\n        pathOr(false, ['content', 'state', 'editorState'], state)\n      ) {\n        return {\n          ...state,\n          content: {\n            ...state.content,\n            state: {\n              ...state.content.state,\n              editorState: state.content.state.editorState.merge({\n                isNative: false\n              })\n            }\n          }\n        }\n      }\n      return state\n    },\n\n    handleRemoveHotKey: hooks.handleRemoveHotKey,\n    handleFocusPreviousHotKey: hooks.handleFocusPreviousHotKey,\n    handleFocusNextHotKey: hooks.handleFocusNextHotKey,\n\n    createInitialState: hooks.createInitialState,\n    serialize: hooks.serialize,\n    unserialize: hooks.unserialize\n\n    // TODO this is disabled because of #207\n    // merge = hooks.merge\n    // split = hooks.split\n  }\n}\n"]}