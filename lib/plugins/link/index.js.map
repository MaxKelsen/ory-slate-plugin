{"version":3,"sources":["../../../src/plugins/link/index.js"],"names":["A","LinkButton","state","open","href","title","hadLinks","onRef","component","e","querySelector","focus","onClick","props","editorState","onChange","preventDefault","hasLinks","inlines","some","inline","type","newState","transform","unwrapInline","apply","isExpanded","setState","wasExpanded","handleClose","window","setTimeout","handleSubmit","wrapInline","data","collapseToEnd","insertText","extend","length","onHrefChange","target","value","onTitleChange","LinkPlugin","name","nodes","hoverButtons","toolbarButtons","deserialize","el","next","tagName","toLowerCase","kind","childNodes","create","attrs","find","serialize","object","children","get"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-alert, prefer-reflect, default-case, react/display-name */\nimport LinkIcon from 'material-ui-icons/Link'\nimport React, { Component } from 'react'\nimport TextField from 'material-ui/TextField'\nimport { ToolbarButton } from '../../helpers'\nimport Plugin from '../Plugin'\nimport Link from './node'\nimport Dialog, { DialogTitle, DialogActions, DialogContent } from 'material-ui/Dialog'\nimport Button from 'material-ui/Button'\nimport { Data } from 'slate'\nimport type { Props } from '../props'\n\nexport const A = 'LINK/LINK'\n\nclass LinkButton extends Component {\n  state = {\n    open: false,\n    href: '',\n    title: '',\n    hadLinks: false\n  }\n\n  props: Props\n\n  input: Component<*, *, *>\n\n  onRef = (component: Component<*, *, *>) => {\n    if (!component && true) {\n      return null\n    }\n\n    const e = component.querySelector('input')\n    if (e) {\n      e.focus()\n    }\n  }\n\n  onClick = e => {\n    const { editorState, onChange } = this.props\n    e.preventDefault()\n\n    const hasLinks = editorState.inlines.some(\n      (inline: any) => inline.type === A\n    )\n\n    if (hasLinks) {\n      const newState = editorState\n        .transform()\n        .unwrapInline(A)\n        .apply()\n      onChange(newState)\n    } else if (editorState.isExpanded) {\n      this.setState({\n        open: true,\n        wasExpanded: editorState.isExpanded,\n        href: '',\n        title: '',\n        hadLinks: hasLinks\n      })\n    } else {\n      this.setState({\n        open: true,\n        wasExpanded: editorState.isExpanded,\n        href: '',\n        title: '',\n        hadLinks: hasLinks\n      })\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n\n    const newState = this.props.editorState\n      .transform()\n      .focus()\n      .apply()\n    window.setTimeout(() => this.props.onChange(newState), 1)\n  }\n\n  handleSubmit = () => {\n    this.setState({ open: false })\n\n    if (!this.state.href) {\n      this.handleClose()\n      return\n    }\n\n    if (this.state.wasExpanded) {\n      const newState = this.props.editorState\n        .transform()\n        .focus()\n        .apply()\n        .transform()\n        .wrapInline({\n          type: A,\n          data: { href: this.state.href }\n        })\n        .collapseToEnd()\n        .apply()\n\n      window.setTimeout(() => this.props.onChange(newState), 1)\n      window.setTimeout(() => this.props.focus(), 100)\n      return\n    }\n\n    if (!this.state.title) {\n      this.handleClose()\n      return\n    }\n\n    const newState = this.props.editorState\n      .transform()\n      .insertText(this.state.title)\n      .extend(-this.state.title.length)\n      .wrapInline({\n        type: A,\n        data: { href: this.state.href }\n      })\n      .collapseToEnd()\n      .focus()\n      .apply()\n\n    this.props.onChange(newState)\n    window.setTimeout(() => this.props.focus(), 100)\n  }\n\n  onHrefChange = e => {\n    this.setState({ href: e.target.value })\n  }\n\n  onTitleChange = e => {\n    this.setState({ title: e.target.value })\n  }\n\n  render() {\n    const { editorState } = this.props\n\n    const hasLinks = editorState.inlines.some(\n      (inline: any) => inline.type === A\n    )\n    return (\n      <span>\n        <ToolbarButton\n          onClick={this.onClick}\n          isActive={hasLinks}\n          icon={<LinkIcon />}\n        />\n          <Dialog\n            className=\"ory-prevent-blur\"\n            open={this.state.open}\n            onRequestClose={this.handleClose}\n          >\n            <DialogTitle>Create a link</DialogTitle>\n            <DialogContent>\n              {this.state.wasExpanded ? null : (\n                <div>\n                  <TextField\n                    hintText=\"Link title\"\n                    onChange={this.onTitleChange}\n                    value={this.state.title}\n                  />\n                </div>\n              )}\n              <div ref={this.onRef}>\n                <TextField\n                  hintText=\"http://example.com/my/link.html\"\n                  onChange={this.onHrefChange}\n                  value={this.state.href}\n                />\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                key=\"0\"\n                color=\"accent\"\n                onClick={this.handleClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                key=\"1\"\n                color=\"primary\"\n                onClick={this.handleSubmit}\n              >\n                Submit\n              </Button>\n            </DialogActions>\n          </Dialog>\n      </span>\n    )\n  }\n}\n\nexport default class LinkPlugin extends Plugin {\n  name = 'link'\n\n  nodes = { [A]: Link }\n\n  hoverButtons = [LinkButton]\n  toolbarButtons = [LinkButton]\n\n  deserialize = (el, next) => {\n    switch (el.tagName.toLowerCase()) {\n      case 'a':\n        return {\n          kind: 'inline',\n          type: A,\n          nodes: next(el.childNodes),\n          data: Data.create({\n            href: (el.attrs.find(({ name }) => name === 'href') || {\n              value: ''\n            }).value\n          })\n        }\n    }\n  }\n\n  serialize = (\n    object: { type: string, kind: string, data: any },\n    children: any[]\n  ) => {\n    if (object.kind !== 'inline') {\n      return\n    }\n    switch (object.type) {\n      case A:\n        return <a href={object.data.get('href')}>{children}</a>\n    }\n  }\n}\n"]}