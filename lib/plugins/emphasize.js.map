{"version":3,"sources":["../../src/plugins/emphasize.js"],"names":["React","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","makeTagMark","ToolbarButton","Plugin","STRONG","EM","U","createButton","type","icon","editorState","onChange","onClick","e","preventDefault","transform","toggleMark","apply","isActive","marks","some","mark","EmphasizePlugin","name","onKeyDown","data","state","isMod","key","hoverButtons","deserialize","el","next","tagName","toLowerCase","kind","nodes","childNodes","serialize","object","children"],"mappings":"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","file":"emphasize.js","sourcesContent":["/* eslint-disable prefer-reflect, default-case, react/display-name */\nimport React from 'react'\nimport FormatBoldIcon from 'material-ui-icons/FormatBold'\nimport FormatItalicIcon from 'material-ui-icons/FormatItalic'\nimport FormatUnderlinedIcon from 'material-ui-icons/FormatUnderlined'\nimport { makeTagMark, ToolbarButton } from '../helpers'\nimport Plugin from './Plugin'\nimport type { Props } from './props'\n\nexport const STRONG = 'EMPHASIZE/STRONG'\nexport const EM = 'EMPHASIZE/EM'\nexport const U = 'EMPHASIZE/U'\n\n// eslint-disable-next-line react/display-name\nconst createButton = (type, icon) => ({ editorState, onChange }: Props) => {\n  const onClick = e => {\n    e.preventDefault()\n\n    onChange(\n      editorState\n        .transform()\n        .toggleMark(type)\n        .apply()\n    )\n  }\n\n  const isActive =\n    editorState && editorState.marks.some(mark => mark.type === type)\n\n  return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\n}\n\nexport default class EmphasizePlugin extends Plugin {\n  props: Props\n\n  name = 'emphasize'\n\n  marks = {\n    [STRONG]: makeTagMark('strong'),\n    [EM]: makeTagMark('em'),\n    [U]: makeTagMark('u')\n  }\n\n  onKeyDown = (e: Event, data: { key: string, isMod: boolean }, state) => {\n    if (data.isMod) {\n      let mark\n\n      switch (data.key) {\n        case 'b':\n          mark = STRONG\n          break\n        case 'i':\n          mark = EM\n          break\n        case 'u':\n          mark = U\n          break\n        default:\n          return\n      }\n\n      return state\n        .transform()\n        .toggleMark(mark)\n        .apply()\n    }\n  }\n\n  hoverButtons = [\n    createButton(STRONG, <FormatBoldIcon />),\n    createButton(EM, <FormatItalicIcon />),\n    createButton(U, <FormatUnderlinedIcon />)\n  ]\n\n  deserialize = (el, next) => {\n    switch (el.tagName.toLowerCase()) {\n      case 'strong':\n      case 'b':\n        return {\n          kind: 'mark',\n          type: STRONG,\n          nodes: next(el.childNodes)\n        }\n      case 'em':\n      case 'i':\n        return {\n          kind: 'mark',\n          type: EM,\n          nodes: next(el.childNodes)\n        }\n      case 'u':\n        return {\n          kind: 'mark',\n          type: U,\n          nodes: next(el.childNodes)\n        }\n    }\n  }\n\n  serialize = (object: { type: string, kind: string }, children: any[]) => {\n    if (object.kind !== 'mark') {\n      return\n    }\n    switch (object.type) {\n      case STRONG:\n        return <strong>{children}</strong>\n      case EM:\n        return <em>{children}</em>\n      case U:\n        return <u>{children}</u>\n    }\n  }\n}\n"]}