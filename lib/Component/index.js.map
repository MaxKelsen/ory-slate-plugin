{"version":3,"sources":["../../src/Component/index.js"],"names":["MuiThemeProvider","createMuiTheme","React","Component","Portal","position","Editor","UpperToolbar","ContentPluginProps","onBlur","_event","_data","state","Slate","componentDidMount","selection","window","getSelection","updateToolbar","shouldComponentUpdate","nextProps","editorState","props","toolbar","focused","readOnly","componentDidUpdate","onStateChange","onChange","handleOpen","portal","firstChild","isBlurred","isCollapsed","left","top","width","style","opacity","scrollY","offsetHeight","scrollX","offsetWidth","schema","plugins","onKeyDown","HoverButtons","ToolbarButtons","focus","isOpened","isExpanded","isFocused","padding","Boolean"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-alert, prefer-reflect, no-underscore-dangle */\nimport { MuiThemeProvider, createMuiTheme } from 'material-ui/styles'\nimport React, { Component } from 'react'\nimport Portal from 'react-portal'\nimport position from 'selection-position'\nimport { Editor } from 'slate'\nimport UpperToolbar from './UpperToolbar'\nimport { ContentPluginProps } from 'ory-editor-core/lib/service/plugin/classes'\n\nconst onBlur = (_event, _data, state) => state\n\nexport type Props = ContentPluginProps<{ editorState: Object }>\n\nclass Slate extends Component {\n    componentDidMount = () => {\n        this.selection = window.getSelection()\n        this.updateToolbar()\n    }\n\n    shouldComponentUpdate = nextProps =>\n        nextProps.state.editorState !== this.props.state.editorState ||\n        nextProps.state.toolbar !== this.props.state.toolbar ||\n        nextProps.focused !== this.props.focused ||\n        nextProps.readOnly !== this.props.readOnly\n\n        componentDidUpdate = () => this.updateToolbar()\n\n        props: ContentPluginProps<{ editorState: Object }>\n        portal: any\n\n        onStateChange = editorState => {\n            this.props.onChange({ editorState })\n        }\n\n        handleOpen = portal => {\n            this.toolbar = portal.firstChild\n        }\n\n        updateToolbar = () => {\n            const { editorState } = this.props.state\n            const toolbar = this.toolbar\n\n            if (!toolbar || editorState.isBlurred || editorState.isCollapsed) {\n                return\n            }\n\n            const { left, top, width } = position()\n\n            toolbar.style.opacity = 1\n            toolbar.style.top = `${top + window.scrollY - toolbar.offsetHeight}px`\n            toolbar.style.left = `${left +\n                window.scrollX -\n                toolbar.offsetWidth / 2 +\n                width / 2}px`\n        }\n\n        render() {\n            const {\n                focused,\n                readOnly,\n                state: { editorState },\n                schema,\n                plugins,\n                onKeyDown,\n                HoverButtons,\n                ToolbarButtons,\n                focus\n            } = this.props\n            const isOpened = editorState.isExpanded && editorState.isFocused\n\n            return (\n                <div>\n                    {readOnly ? null : (\n                        <UpperToolbar open={focused}>\n                            <ToolbarButtons\n                                editorState={editorState}\n                                onChange={this.onStateChange}\n                                focus={focus}\n                            />\n                        </UpperToolbar>\n                    )}\n                    <Portal isOpened={isOpened} onOpen={this.handleOpen}>\n                        <MuiThemeProvider theme={createMuiTheme()}>\n                        {/* ory-prevent-blur is required to prevent global blurring */}\n                            <div\n                                className=\"ory-prevent-blur ory-plugins-content-slate-inline-toolbar\"\n                                style={{ padding: 0 }}\n                            >\n                                <HoverButtons\n                                    editorState={editorState}\n                                    onChange={this.onStateChange}\n                                    focus={focus}\n                                />\n                            </div>\n                        </MuiThemeProvider>\n                    </Portal>\n                    <Editor\n                        onChange={this.onStateChange}\n                        onKeyDown={onKeyDown}\n                        readOnly={Boolean(readOnly)}\n                        onBlur={onBlur}\n                        schema={schema}\n                        state={editorState}\n                        plugins={plugins}\n                    />\n                </div>\n            )\n        }\n    }\n\nexport default Slate\n"]}