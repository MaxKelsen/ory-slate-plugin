{"version":3,"sources":["../src/hooks.js"],"names":["List","head","map","path","reduce","tail","React","AlignmentPlugin","BlockquotePlugin","CodePlugin","EmphasizePlugin","HeadingsPlugin","LinkPlugin","ListsPlugin","ParagraphPlugin","P","parse5","Document","Raw","State","Plain","Html","DEFAULT_NODE","defaultPlugins","lineBreakSerializer","deserialize","el","tagName","toLowerCase","kind","text","serialize","object","children","type","html","rules","parseHtml","parseFragment","options","terse","createInitialState","editorState","nodes","unserialize","importFromHtml","serialized","merge","states","mergedNodes","a","b","concat","mergedDocument","create","mergedEditorState","document","split","state","node","splittedDocument","splittedEditorState","toArray","handleRemoveHotKey","_","content","Promise","resolve","reject","length","windowSelectionWaitTime","handleFocusPreviousHotKey","e","isExpanded","setTimeout","selection","isAtStartOf","first","handleFocusNextHotKey","isAtEndOf","last"],"mappings":"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","file":"hooks.js","sourcesContent":["// @flow\n// FIXME #125: missing types for slate internals\n/* eslint-disable new-cap, arrow-body-style, react/display-name */\nimport { List } from 'immutable';\nimport head from 'ramda/src/head';\nimport map from 'ramda/src/map';\nimport path from 'ramda/src/path';\nimport reduce from 'ramda/src/reduce';\nimport tail from 'ramda/src/tail';\nimport React from 'react';\nimport type { Props } from './Component';\nimport AlignmentPlugin from './plugins/alignment';\nimport BlockquotePlugin from './plugins/blockquote';\nimport CodePlugin from './plugins/code';\nimport EmphasizePlugin from './plugins/emphasize';\nimport HeadingsPlugin from './plugins/headings';\nimport LinkPlugin from './plugins/link';\nimport ListsPlugin from './plugins/lists';\nimport ParagraphPlugin, { P } from './plugins/paragraph';\nimport parse5 from 'parse5';\n\n// FIXME #126\nimport { Document, Raw, State, Plain } from 'slate';\nimport Html from 'slate-html-serializer';\n\nconst DEFAULT_NODE = P\n\nexport const defaultPlugins = [\n    new ParagraphPlugin(),\n    new EmphasizePlugin(),\n    new HeadingsPlugin({ DEFAULT_NODE }),\n    new LinkPlugin(),\n    new CodePlugin({ DEFAULT_NODE }),\n    new ListsPlugin({ DEFAULT_NODE }),\n    new BlockquotePlugin({ DEFAULT_NODE }),\n    new AlignmentPlugin()\n    // new KatexPlugin({ DEFAULT_NODE })\n]\n\nexport const lineBreakSerializer = {\n    deserialize(el: any) {\n        if (el.tagName.toLowerCase() === 'br') {\n            return { kind: 'text', text: '\\n' }\n        }\n    },\n    serialize(object: any, children: any) {\n        if (object.type === 'text' || children === '\\n') {\n            return <br />\n        }\n    }\n}\n\nexport const html = new Html({\n    rules: [...defaultPlugins, lineBreakSerializer],\n    parseHtml: parse5.parseFragment\n})\n\nconst options = { terse: true }\n\nexport const createInitialState = () => ({\n    editorState: Raw.deserialize({\n        nodes: [\n            {\n                kind: 'block',\n                type: P,\n                nodes: [\n                    {\n                        kind: 'text',\n                        text: ''\n                    }\n                ]\n            }\n        ]\n    },\n    options\n    )\n})\n\nexport const unserialize = ({\n    importFromHtml,\n    serialized,\n    editorState\n}: {\n    importFromHtml: string,\n    serialized: Object,\n    editorState: Object\n}): { editorState: Object } => {\n    if (serialized) {\n        return { editorState: Raw.deserialize(serialized, options) }\n    } else if (importFromHtml) {\n        return { editorState: html.deserialize(importFromHtml, options) }\n    } else if (editorState) {\n        return { editorState }\n    }\n\n    return createInitialState()\n}\n\nexport const serialize = ({ editorState }: any) => ({\n    serialized: Raw.serialize(editorState, options)\n})\n\nexport const merge = (states: Object[]): Object => {\n    const nodes = map(path(['editorState', 'document', 'nodes']), states)\n    const mergedNodes = reduce(\n        (a: List<any>, b: List<any>) => a.concat(b),\n        head(nodes),\n        tail(nodes)\n    )\n    const mergedDocument = Document.create({ nodes: mergedNodes })\n    const mergedEditorState = State.create({ document: mergedDocument })\n\n    return { editorState: mergedEditorState }\n}\n\nexport const split = (state: Object): Object[] => {\n    const nodes = path(['editorState', 'document', 'nodes'], state)\n\n    return nodes\n        .map((node: any) => {\n            const splittedDocument = Document.create({ nodes: List([node]) })\n            const splittedEditorState = State.create({ document: splittedDocument })\n\n            return { editorState: splittedEditorState }\n    })\n    .toArray()\n}\n\n// const position = (): {\n//   top: ?number,\n//   right: ?number,\n//   left: ?number,\n//   bottom: ?number\n// } => {\n//   if (window && window.getSelection) {\n//     const selection = window.getSelection()\n//     if (!selection.rangeCount) {\n//       return {\n//         top: null,\n//         right: null,\n//         left: null,\n//         bottom: null,\n//       }\n//     }\n//\n//     return selection.getRangeAt(0).getBoundingClientRect()\n//   }\n//\n//   if (window.document.selection) {\n//     return window.document.selection\n//       .createRange()\n//       .getBoundingClientRect()\n//   }\n//\n//   return {\n//     top: null,\n//     right: null,\n//     left: null,\n//     bottom: null,\n//   }\n// }\n\n// if editor state is empty, remove cell when backspace or delete was pressed.\nexport const handleRemoveHotKey = (\n    _: KeyboardEvent,\n    { content: { state: { editorState } } }: Props\n) =>\n    new Promise(\n        (resolve: Function, reject: Function) =>\n        Plain.serialize(editorState).length < 1 ? resolve() : reject()\n    )\n\nconst windowSelectionWaitTime = 1\n\nexport const handleFocusPreviousHotKey = (\n    e: KeyboardEvent,\n    { content: { state: { editorState } } }: Props\n) => {\n  // const isArrowUp = e.keyCode === 38\n\n    return new Promise((resolve: Function, reject: Function) => {\n        if (editorState.isExpanded) {\n            return reject()\n        }\n\n        setTimeout(() => {\n            // if (isArrowUp && next.top === current.top) {\n            //   return resolve()\n            // } else\n            if (\n                editorState.selection.isAtStartOf(editorState.document.nodes.first())\n            ) {\n                return resolve()\n            }\n            reject()\n        }, windowSelectionWaitTime)\n    })\n}\n\nexport const handleFocusNextHotKey = (\n    e: KeyboardEvent,\n    { content: { state: { editorState } } }: Props\n) => {\n    // const isArrowDown = e.keyCode === 40\n\n    return new Promise((resolve: Function, reject: Function) => {\n        if (editorState.isExpanded) {\n            return reject()\n        }\n\n        setTimeout(() => {\n            // if (isArrowDown && next.top === current.top) {\n            //   return resolve()\n            // } else\n            if (editorState.selection.isAtEndOf(editorState.document.nodes.last())) {\n                return resolve()\n            }\n            reject()\n        }, windowSelectionWaitTime)\n    })\n}\n"]}